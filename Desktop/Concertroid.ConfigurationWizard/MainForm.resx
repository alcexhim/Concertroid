<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsIAAA7CARUoSoAAAAQrSURBVFhH7ZZtTFtlFMdnNVmUxNcPbEYMyZrSlEZIFmSR
        Ukpf6Du09AUK1Gkyoywu2DlDsmVDXSKGmDWQRqwbm52broTQ0dut28DR0tJJoHwYY5JIQBpiCY6EgDHR
        uR2fc+HWirN2g49t8svNfe55zvmf//OSbtuW+WUcyDiQcSDjQMaBfzsAZGirSM9fmUxGIVhYq9VCZWVl
        gqqqKkB0eh3o9Xqorq4Gg8EARqMRzGYz1NbWQl1dHTQ0WMFisYDJZKLjtFoN3URJaSlVXFyMuVP+6GCN
        RvM3JAEtJkmQTkeE6P4pBAuiiPr6OlqIeV0A5pLL5bDntT10Y6mqg1qlBrVaRcDnGhp1kpi1ZJTNZgNE
        KBRiPIWdohsJEQ0NtBgcV6lUQFwFQanwTmFhYUoRdPB/gcKkUjFdnNkbHo+HFqFQKChcHixoJEKY5cB3
        7F4kEkFBYQHF5/NTC1AoFcCgVCpBqcB38kRUSrrrjRuTEcEsG+4bLGy1WuH9QwfRoQCfz6M4eRyqqKiI
        mU+vRHt7+/bkJaHVpiKVgI3zDjS9C7dvT/45Ojp6t7Hx7QliPyDYQEtLC+vUtz6Hq+datMPZw2VEkOIV
        UFHxYGRkPJUAqUQCErGEthuXJS8vj2psfOfHmZkZ8Hr7gMfLh/z8fGCxWHCu92pfIDp1Lzg+DV+4Lp5J
        CMDN8iCkUhlIyTepVEonR9sZ8L28vBxEZWX0t5OnnORo6r/Pycmh6ustt+LxnyEUCgGXywUOhwNPZmWB
        xz+05BscAVe3f6zF6XwqIQAL0MXIUyJZg+4sCbFYDOUIFiXdlgnXCgsEAsBN5rvk+zU8HPr97NeupdBw
        CKanpyEQGCSnQAC72GxoPnwc+vyBX75ye6+c6DhXsvFYbvrmq6kxQSwWg5WVFVheXoaFhQWYnZ0Fv98P
        R461gv96eNnR5bb834W0qe/uHnfNUDjo8np7PyVuRBcXF+FK/xB8F7xxr7PLbdtU8oeZzNN+wn7juNf3
        QZv7t8HwCIyO34RodGzS4XDseJg8jxTLU7XtMB7tvXmwMwLmY977h0+4l+bn5yEej0PkRnjcbrc/+0iJ
        05nE1rXtMh29GN3XNghVTU6Q286vCvc5zEOh4ATuh7m5ORi43j9M7oPECUgnb1oxBbUdtr2t12IOzy0w
        HToJsqbzq7tf/7J5/eZ7iZyIyampKUAuXab6u7u7H08rcTpBXMNnlo/Ojt29PBID7XtdILNd+GO31flh
        8lx7pz13YGDgh0gkAoT7Ltfp/enkTidme66oSf5m69VVue0CiA58A6/u/TxIJuYQniHgvf8cYSf5L1Hi
        8fROUBT1U/ORZiEZ2xIXcFPlFug/7hTvP3On5K3Ts8+zRQYyhnf9TsLTjADyfHmd7HVxWyKAcYn1YpH1
        hezsV7LIwBOEx9Kx7y/JwdRNtsDm1wAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAEAIABoBAAAJgAAACAgAAABACAAqBAAAI4EAAAoAAAAEAAAACAAAAABACAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIjVo1ZnpM
        KkwAAAAQAAAABwAAAA0AAAAAAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWyUAIsuh
        gf+eZzz8SCYQGAAAAASIiYhGv7+//3p+fCUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AACaXjJVvJBv/51qQueloZk62dnZ/8DCwaoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAJRSJC21hF/vzcXA/9DS0rcAAAAAgICAAAAAADcAAAB/AAAAfwAAAH8AAAB/AAAAfwAA
        AH8AAAB/AAAAgpydnZXg4uLT5Ofp9bSuq/+8s6pjAAAAAKSTjwAjIyP/SUhI/0hISP9IR0j/RkZG/2ho
        Z/+Li4v/Ojo6/zU1Neesrq3tcHNx2d7e3/8YGRn+hX14/berorwAAAAAIyMj/0ZGRv9GRkb/RkZG/2Rk
        ZP8AAAD/AAAA/4WFhf9FRUb/PT09/35/f97BwcH1Kioq/yIfHaLOwbXzpZWNLyQkJP9JSUj/SUlJ/0lJ
        Sf9VVlXmGRkZ/yoqKv5fXl7pTk5O/1JSUv9cXV3/Nzg42TExMbwAAACCAAAAAAAAAAAWFhbBODk5/0tL
        S/9MTEz/TU1N/1hYWOZSUlL/UVJS6VVVVf5aW1r/U1NU/0tLS/8lJSTbAAAAOQAAAAAAAAAAU1NTKhYW
        FmElJSX/JCQk/yUlJf8mJiX/JiYm/ygoKP8pKir/Kyoq/ycnJ/8SExPJRkZFWgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//AAD/nQAA/8kAAP/jAAD/BwAAAAEAAAABAAAAAwAAAAcAAMAP
        AAD//wAA//8AAP//AAD//wAA//8AAP//AAAoAAAAIAAAAEAAAAABACAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAl42GxMuFxcLAAAABAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAACCCUS+XoGtD7J9mO99BJRJTAAAAKAAAABkAAAAOAAAAEQAA
        ABkAAAAeAAAAHgAAABcAAAAPAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHb0EgR7qHYvOocUf/pm1A/5dfNsEAAAAdAAAADwAA
        AAcAAAARAAAAGVJSUjuur6/TtLS04Hd7dz4AAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACMUyhZzKOB++LJtv+dcE3/qHFF+ple
        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
        AP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/AAAA/0xMTP9MTEz/TExM/0xNTP9NTU3/TU1O/05O
        Tv9OTk7/T1BQ/1BQUP9RUVH/UlJS/1NTU/9VVVX/WFhY/1pbW/9aWlr/VVVW/1FRUf9MTEz/R0dH/zk6
        ObMAAAD/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEZGRrNGRkazAAAA/01NTf9OTk7/Tk5O/05O
        Tv9PT0//T09P/1BRUP9RUVH/UlJS/1NTU/9UVFT/VlZW/1hYWP9aWlr/XVxc/1lZWf9VVVX/UVFR/0xN
        Tf8AAAD/PT08szg4OLMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP///////8f////D8///weP//+HD///wh///+A////wf///wP4AA
        AB8AAAAHAAAAAwAAAAEAAAATAAAAHwAAAB8AAAAfgAAAP4AAAD/wAAH/////////////////////////
        ////////////////////////////////////////
</value>
  </data>
</root>